<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\TARDIS_OS.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\TARDIS_OS.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060300: Last Updated: Thu Jun 02 00:37:09 2022
<BR><P>
<H3>Maximum Stack Usage =         52 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SysTick_Handler &rArr; TaskSystemTickHandler &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMon_Handler</a><BR>
 <LI><a href="#[17]">AACI_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[17]">AACI_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[17]">AACI_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[1e]">CAN_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[1c]">CHLCD_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[18]">CLCD_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[21]">CPU_CLCD_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[a]">DebugMon_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[19]">ENET_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[1d]">FLEXRAY_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[20]">I2C_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[1f]">LIN_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[11]">MCIA_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[12]">MCIB_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[6]">MemManage_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from switch.o(.emb_text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[e]">RTC_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[23]">SPI_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from cpu.o(i.SysTick_Handler) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from system_armcm4.o(i.SystemInit) referenced from startup_armcm4.o(.text)
 <LI><a href="#[f]">TIM0_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[10]">TIM2_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[13]">UART0_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[14]">UART1_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[15]">UART2_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[22]">UART3_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[16]">UART4_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[1a]">USBDC_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[1b]">USBHC_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[d]">WDT_IRQHandler</a> from startup_armcm4.o(.text) referenced from startup_armcm4.o(RESET)
 <LI><a href="#[2b]">__main</a> from __main.o(!!!main) referenced from startup_armcm4.o(.text)
 <LI><a href="#[2a]">idleTaskEntry</a> from main.o(i.idleTaskEntry) referenced from main.o(i.main)
 <LI><a href="#[26]">task1Entry</a> from app.o(i.task1Entry) referenced from app.o(i.InitApp)
 <LI><a href="#[27]">task2Entry</a> from app.o(i.task2Entry) referenced from app.o(i.InitApp)
 <LI><a href="#[28]">task3Entry</a> from app.o(i.task3Entry) referenced from app.o(i.InitApp)
 <LI><a href="#[29]">task4Entry</a> from app.o(i.task4Entry) referenced from app.o(i.InitApp)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[2c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[5f]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[60]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[2f]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[61]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[33]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[62]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[63]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[64]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[65]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[66]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[67]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[68]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[69]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[70]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[71]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[72]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[73]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[74]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[75]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[76]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[38]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[78]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[79]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[7a]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[7b]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[2d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[7e]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[30]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[32]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[7f]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[34]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; InitApp &rArr; TaskInit &rArr; TaskSchedRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[3d]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[37]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[81]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[39]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, switch.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>AACI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AACI_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>CHLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>CPU_CLCD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>FLEXRAY_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>LIN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>MCIA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>MCIB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>USBDC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>USBHC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>__user_initial_stackheap</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_armcm4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[82]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[83]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[36]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[85]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[86]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[87]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[58]"></a>BitmapClear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bitmap.o(i.BitmapClear))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedUnRdy
</UL>

<P><STRONG><a name="[89]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>BitmapInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bitmap.o(i.BitmapInit))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedInit
</UL>

<P><STRONG><a name="[56]"></a>BitmapSet</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bitmap.o(i.BitmapSet))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedRdy
</UL>

<P><STRONG><a name="[3e]"></a>EventInit</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, event.o(i.EventInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = EventInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlagGroupInit
</UL>

<P><STRONG><a name="[40]"></a>EventRemoveTask</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, event.o(i.EventRemoveTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = EventRemoveTask
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskExitCritical
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskEnterCritical
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListRemoveNode
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
</UL>

<P><STRONG><a name="[44]"></a>FlagGroupInit</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, flaggroup.o(i.FlagGroupInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FlagGroupInit &rArr; EventInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1Entry
</UL>

<P><STRONG><a name="[45]"></a>GetBitmapFirstSet</STRONG> (Thumb, 82 bytes, Stack size 4 bytes, bitmap.o(i.GetBitmapFirstSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitmapPosCount
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHighestReady
</UL>

<P><STRONG><a name="[46]"></a>GetBitmapPosCount</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmap.o(i.GetBitmapPosCount))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitmapFirstSet
</UL>

<P><STRONG><a name="[57]"></a>GetListCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.GetListCount))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedUnRdy
</UL>

<P><STRONG><a name="[47]"></a>InitApp</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app.o(i.InitApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = InitApp &rArr; TaskInit &rArr; TaskSchedRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>ListAddHead</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, list.o(i.ListAddHead))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeTaskWait
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedRdy
</UL>

<P><STRONG><a name="[5b]"></a>ListAddTail</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, list.o(i.ListAddTail))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
</UL>

<P><STRONG><a name="[4f]"></a>ListFirstNode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, list.o(i.ListFirstNode))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHighestReady
</UL>

<P><STRONG><a name="[3f]"></a>ListInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, list.o(i.ListInit))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventInit
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskDelayedInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedInit
</UL>

<P><STRONG><a name="[5a]"></a>ListRemoveFirst</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.ListRemoveFirst))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
</UL>

<P><STRONG><a name="[42]"></a>ListRemoveNode</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, list.o(i.ListRemoveNode))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRemoveTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeTaskWakeUp
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedUnRdy
</UL>

<P><STRONG><a name="[50]"></a>NodeInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.NodeInit))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInit
</UL>

<P><STRONG><a name="[5e]"></a>SetSysTickPeriod</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, cpu.o(i.SetSysTickPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysTickPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1Entry
</UL>

<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, cpu.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SysTick_Handler &rArr; TaskSystemTickHandler &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_armcm4.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_armcm4.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>TaskDelay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, time.o(i.TaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TaskDelay &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskExitCritical
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskEnterCritical
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeTaskWait
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedUnRdy
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSched
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task4Entry
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task3Entry
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task2Entry
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task1Entry
</UL>

<P><STRONG><a name="[41]"></a>TaskEnterCritical</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, switch.o(i.TaskEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRemoveTask
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSched
</UL>

<P><STRONG><a name="[43]"></a>TaskExitCritical</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, switch.o(i.TaskExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRemoveTask
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSched
</UL>

<P><STRONG><a name="[4e]"></a>TaskHighestReady</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.TaskHighestReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListFirstNode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitmapFirstSet
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSched
</UL>

<P><STRONG><a name="[48]"></a>TaskInit</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, task.o(i.TaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TaskInit &rArr; TaskSchedRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NodeInit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedRdy
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>TaskRunFirst</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, switch.o(i.TaskRunFirst))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>TaskSched</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(i.TaskSched))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSwitch
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskExitCritical
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskEnterCritical
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHighestReady
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
</UL>

<P><STRONG><a name="[53]"></a>TaskSchedInit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main.o(i.TaskSchedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TaskSchedInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListInit
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51]"></a>TaskSchedRdy</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.TaskSchedRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TaskSchedRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListAddHead
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapSet
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInit
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
</UL>

<P><STRONG><a name="[4c]"></a>TaskSchedUnRdy</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main.o(i.TaskSchedUnRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TaskSchedUnRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListRemoveNode
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetListCount
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapClear
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
</UL>

<P><STRONG><a name="[52]"></a>TaskSwitch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, switch.o(i.TaskSwitch))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSched
</UL>

<P><STRONG><a name="[49]"></a>TaskSystemTickHandler</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, main.o(i.TaskSystemTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = TaskSystemTickHandler &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskExitCritical
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskEnterCritical
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListRemoveFirst
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListAddTail
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetListCount
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EventRemoveTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeTaskWakeUp
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedRdy
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSched
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[4b]"></a>TimeTaskWait</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, main.o(i.TimeTaskWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TimeTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListAddHead
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
</UL>

<P><STRONG><a name="[59]"></a>TimeTaskWakeUp</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, main.o(i.TimeTaskWakeUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TimeTaskWakeUp
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListRemoveNode
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSystemTickHandler
</UL>

<P><STRONG><a name="[2a]"></a>idleTaskEntry</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.idleTaskEntry))
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[35]"></a>main</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = main &rArr; InitApp &rArr; TaskInit &rArr; TaskSchedRdy
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskRunFirst
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskInit
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitApp
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;taskDelayedInit
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskSchedInit
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskHighestReady
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[26]"></a>task1Entry</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, app.o(i.task1Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = task1Entry &rArr; TaskDelay &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlagGroupInit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysTickPeriod
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.InitApp)
</UL>
<P><STRONG><a name="[27]"></a>task2Entry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app.o(i.task2Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = task2Entry &rArr; TaskDelay &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.InitApp)
</UL>
<P><STRONG><a name="[28]"></a>task3Entry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app.o(i.task3Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = task3Entry &rArr; TaskDelay &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.InitApp)
</UL>
<P><STRONG><a name="[29]"></a>task4Entry</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, app.o(i.task4Entry))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = task4Entry &rArr; TaskDelay &rArr; TaskSched &rArr; TaskHighestReady &rArr; GetBitmapFirstSet
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app.o(i.InitApp)
</UL>
<P><STRONG><a name="[5c]"></a>taskDelayedInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(i.taskDelayedInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = taskDelayedInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ListInit
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<P>
<H3>
Local Symbols
</H3><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
